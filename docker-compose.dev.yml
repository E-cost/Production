version: '3'

services:
  postgresql:
    image: postgres
    container_name: database
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin123
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - web-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
Ð²
  migrate:
    image: migrate/migrate
    container_name: migrations
    networks:
      - web-net
    volumes:
      - ./back-end/schema:/schema
    depends_on:
      postgresql:
        condition: service_healthy
    command: ["-path", "./schema", "-database", "postgres://postgres:admin123@postgresql:5432/postgres?sslmode=disable", "up"]

  redis:
    image: redis:latest
    container_name: redis
    command: ["redis-server", "--requirepass", "harmna-qi04ed-l19u23"]
    depends_on:
      - migrate
    networks:
      - web-net
    ports:
      - "6379:6379"

  service:
    build:
      context: ./back-end
      dockerfile: Dockerfile.dev
    image: service-dev:local
    container_name: service
    depends_on:
      - migrate
    networks:
      - web-net
    environment:
      POSTGRES_HOST: postgresql
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      AWS_ACCESS_KEY_ID: YCAJEAOSEZPcYUzEyad7dx1Qz
      AWS_SECRET_ACCESS_KEY: YCPnIB1mN-3s7N-miGHN81y3KGr7QDR6_unkdP1A
      AWS_REGION: ru-central1-a
      AWS_ENDPOINT_URL: https://storage.yandexcloud.net
    ports:
      - "30001:30001"

  client:
    build:
      context: ./front-end
      dockerfile: Dockerfile.dev
    image: client-dev:latest
    container_name: client
    depends_on:
      - service
    networks:
      - web-net
    ports:
      - "3000:3000"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    image: nginx:latest
    container_name: nginx
    ports:
      - "8181:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./test-access.log:/var/log/nginx/access.log
    depends_on:
      - client
    restart: always
    networks:
      - web-net

# prometheus-nginx-exporter:
#   build:
#     context: ./prometheus-nginx-exporter
#     dockerfile: Dockerfile
#   image: nginx-exporter:latest
#   container_name: nginx-exporter
#   command: --target.host=nginx
#   depends_on:
#     - service
#     - client
#     - nginx
#     - prometheus
#   ports:
#     - "9150:9150"
#   volumes:
#     - ./test-access.log:/var/log/nginx/access.log

# prometheus:
#   image: prom/prometheus:latest
#   container_name: prometheus
#   ports:
#     - "9090:9090"
#   depends_on:
#     - service
#     - client
#     - nginx
#   volumes:
#     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

networks:
  web-net:
    driver: bridge